name: CMake

on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:
      - master

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Check Tabs
      run: |
        if git grep -n $'\t'          *.cpp *.c *.hpp *.h; then echo 'Please replace tabs with spaces in source files.';     false; fi

    - name: Check Whitespace
      run: |
        if git grep -n '[[:blank:]]$' *.cpp *.c *.hpp *.h; then echo 'Please remove trailing whitespace from source files.'; false; fi

  build:
    needs: check

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2

    #- name: Set up Python
    #  uses: actions/setup-python@v2
    #  with:
    #    python-version: 3.7

    #- name: Install Python Dependencies
    #  run: |
    #    pip install mako

    #- name: Check Generated Files
    #  shell: bash
    #  working-directory: $GITHUB_WORKSPACE
    #  run: |
    #    mkdir temp
    #    pushd scripts
    #    python3 gen_openclext.py -registry https://raw.githubusercontent.com/KhronosGroup/OpenCL-Docs/master/xml/cl.xml -o ../temp
    #    popd
    #    if ! diff src/openclext.cpp temp/openclext.cpp; then echo 'Please ensure all files are generated correctly.'; false; fi

    - name: Get OpenCL Headers
      uses: actions/checkout@master
      with:
        repository: KhronosGroup/OpenCL-Headers
        path: external/OpenCL-Headers

    - name: Create Build Directory
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Run CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake
        -DOpenCL_INCLUDE_DIRS=$GITHUB_WORKSPACE/external/OpenCL-Headers
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        -DOPENCL_EXTENSION_LOADER_XML_PATH=https://raw.githubusercontent.com/KhronosGroup/OpenCL-Registry/master/xml/cl.xml
        $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE
